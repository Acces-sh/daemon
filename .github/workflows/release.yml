name: Create release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Name of version  (ie 1.0.1)'
        required: true

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      - name: Publish Docker Image
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/acces-sh/daemon-test:latest,ghcr.io/acces-sh/daemon-test:${{ github.event.inputs.version }}
          context: ./
          file: ./Dockerfiles/amd64/Dockerfile
          push: true

  publish-debian:
    runs-on: ubuntu-latest
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'
      - run: bash build/build-debian.sh ${{ github.event.inputs.version }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          files: |
            build/shdaemon_${{ github.event.inputs.version }}-1_amd64.deb
            install_script.sh
          body_path: releasesnotes/NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
